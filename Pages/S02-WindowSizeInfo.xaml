<Page
    x:Class="SampleUWP.S02"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d" SizeChanged="Page_SizeChanged" Loaded="Page_Loaded">

    <RelativePanel>

        <TextBlock x:Name="HomeText" Style="{ThemeResource SubtitleTextBlockStyle}" Margin="8,16,8,8" TextWrapping="WrapWholeWords" VerticalAlignment="Center"
                   Text="This sample shows various ways to retrieve different information about this page and app." IsTextSelectionEnabled="True"
                   RelativePanel.AlignTopWithPanel="True"/>

        <Viewbox x:Name="HomeSymbol" Margin="8" Width="150" RelativePanel.Below="HomeText">
            <SymbolIcon Symbol="Home" Foreground="{ThemeResource SystemControlHighlightAccentBrush}"/>
        </Viewbox>

        <Button x:Name="WinInfo1Button"   Content="Update Win.Curr.Bounds" Click="UpdateWinInfo1_Click" Margin="8" Width="200" RelativePanel.Below="HomeSymbol" RelativePanel.AlignLeftWithPanel="True"/>

        <Button x:Name="WinInfo2Button"   Content="Update ApplicationView" Click="UpdateWinInfo2_Click" Margin="8" Width="200" RelativePanel.Below="HomeSymbol" RelativePanel.RightOf="WinInfo1Button"/>

        <Button x:Name="WinInfo3Button"   Content="Update DisplayInformation" Click="UpdateWinInfo3_Click" Margin="8" Width="200" RelativePanel.Below="HomeSymbol" RelativePanel.RightOf="WinInfo2Button"/>

        <Button x:Name="ToggleFullScreen" Content="Toggle Full Screen Mode" Click="ToggleFullScreenMode_Click" Margin="8" Width="200" RelativePanel.Below="HomeSymbol" RelativePanel.RightOf="WinInfo3Button"/>

        <Button x:Name="GetMonitorInfo"   Content="Get Monitor Info" Click="GetMonitorInfo_Click"  Margin="8" IsEnabled="False"  Width="200" RelativePanel.Below="HomeSymbol" RelativePanel.RightOf="ToggleFullScreen"/>

        <TextBlock x:Name="PageInfo" Text="pageInfo" Style="{ThemeResource BodyTextBlockStyle}" TextWrapping="WrapWholeWords" Margin="8,8,16,8" RelativePanel.Below="GetMonitorInfo" RelativePanel.AlignLeftWithPanel="True"/>

        <TextBlock x:Name="WinInfo1" Text="winInfo1" Style="{ThemeResource BodyTextBlockStyle}" TextWrapping="WrapWholeWords" Margin="8,8,16,8" RelativePanel.Below="PageInfo" RelativePanel.AlignLeftWithPanel="True"/>

        <TextBlock x:Name="WinInfo2" Text="winInfo2" Style="{ThemeResource BodyTextBlockStyle}" TextWrapping="WrapWholeWords" Margin="8,8,16,8" RelativePanel.Below="WinInfo1" RelativePanel.AlignLeftWithPanel="True"/>

        <TextBlock x:Name="WinInfo3" Text="winInfo3" Style="{ThemeResource BodyTextBlockStyle}" TextWrapping="WrapWholeWords" Margin="8,8,16,8" RelativePanel.Below="WinInfo2" RelativePanel.AlignLeftWithPanel="True"/>

        <TextBlock x:Name="WinInfo4" Text="winInfo4" Style="{ThemeResource BodyTextBlockStyle}" TextWrapping="WrapWholeWords" Margin="8,8,16,8" Visibility="Collapsed" RelativePanel.Below="WinInfo3" RelativePanel.AlignLeftWithPanel="True"/>


        <!--Responsive VisualStates-->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <!--Large=720: VisualState triggered when window width >= largeAdaptTrigMinWindowWidth epx.-->
                        <AdaptiveTrigger MinWindowWidth="{StaticResource largeAdaptTrigMinWindowWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- Set large settings in XAML above so that nothing needs to be changed here. -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <!-- Medium=480: VisualState triggered when window width >= meduimAdaptTrigMinWindowWidth and < largeAdaptTrigMinWindowWidth epx.  -->
                        <AdaptiveTrigger MinWindowWidth="{StaticResource meduimAdaptTrigMinWindowWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- Optimizes objects for medium width.  Also for phones in landscape orientation. 
                            Keeps primary layout narrow while showing SplitView pane. -->
                        <Setter Target="HomeText.(RelativePanel.AlignHorizontalCenterWithPanel)" Value="True" />
                        <Setter Target="HomeSymbol.(RelativePanel.AlignHorizontalCenterWithPanel)" Value="True" />

                        <Setter Target="WinInfo3Button.(RelativePanel.AlignLeftWithPanel)" Value="True" />
                        <Setter Target="WinInfo3Button.(RelativePanel.Below)" Value="WinInfo1Button" />
                        <Setter Target="ToggleFullScreen.(RelativePanel.Below)" Value="WinInfo1Button" />
                        <Setter Target="ToggleFullScreen.(RelativePanel.AlignLeftWith)" Value="WinInfo2Button" />
                        <Setter Target="GetMonitorInfo.(RelativePanel.Below)" Value="WinInfo3Button" />
                        <Setter Target="GetMonitorInfo.(RelativePanel.AlignLeftWithPanel)" Value="True" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <!-- Small: VisualState triggered when window width >= 0 and < meduimAdaptTrigMinWindowWidth epx. -->
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- Small: Optimizes objects for small width.  For narrow windows and phones in portrait orientation.
                        Collapses the SplitView pane into overlay mode and a rearranges objects stacked below each other. -->
                        <Setter Target="HomeText.(RelativePanel.AlignHorizontalCenterWithPanel)" Value="True" />
                        <Setter Target="HomeSymbol.(RelativePanel.AlignHorizontalCenterWithPanel)" Value="True" />
                        <Setter Target="WinInfo1Button.(RelativePanel.Below)" Value="HomeSymbol" />
                        <Setter Target="WinInfo1Button.(RelativePanel.AlignLeftWithPanel)" Value="False" />
                        <Setter Target="WinInfo1Button.(RelativePanel.AlignHorizontalCenterWithPanel)" Value="True" />
                        <Setter Target="WinInfo2Button.(RelativePanel.Below)" Value="WinInfo1Button" />
                        <Setter Target="WinInfo2Button.(RelativePanel.RightOf)" Value="" />
                        <Setter Target="WinInfo2Button.(RelativePanel.AlignHorizontalCenterWithPanel)" Value="True" />
                        <Setter Target="WinInfo3Button.(RelativePanel.Below)" Value="WinInfo2Button" />
                        <Setter Target="WinInfo3Button.(RelativePanel.RightOf)" Value="" />
                        <Setter Target="WinInfo3Button.(RelativePanel.AlignHorizontalCenterWithPanel)" Value="True" />
                        <Setter Target="ToggleFullScreen.(RelativePanel.Below)" Value="WinInfo3Button" />
                        <Setter Target="ToggleFullScreen.(RelativePanel.RightOf)" Value="" />
                        <Setter Target="ToggleFullScreen.(RelativePanel.AlignHorizontalCenterWithPanel)" Value="True" />
                        <Setter Target="GetMonitorInfo.(RelativePanel.Below)" Value="ToggleFullScreen" />
                        <Setter Target="GetMonitorInfo.(RelativePanel.RightOf)" Value="" />
                        <Setter Target="GetMonitorInfo.(RelativePanel.AlignHorizontalCenterWithPanel)" Value="True" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

    </RelativePanel>
</Page>
