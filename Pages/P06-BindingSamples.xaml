<Page
    x:Class="SampleUWP.P06"
    xmlns:local="using:SampleUWP"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <!-- The following binding converter classes are defined at end of MainPage.xaml.cs -->
        <local:SymbolTypeConverter   x:Key="FontSelector"></local:SymbolTypeConverter>
        <local:SymbolTextConverter   x:Key="DisplaySymbolText"></local:SymbolTextConverter>
        <local:MenuTextConverter     x:Key="DisplayMenuText"></local:MenuTextConverter>
    </Page.Resources>

    <!--
    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                    <CommonNavigationTransitionInfo IsStaggeringEnabled="True"/>
                </NavigationThemeTransition.DefaultNavigationTransitionInfo>
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>
    
     CommonNavigationTransitionInfo.IsStaggerElement="True"
    -->

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Pivot x:Name="pagePivot" Grid.Row="0" SelectionChanged="PivotMenu_SelectionChanged">   <!--Background="{ThemeResource PivotNavButtonBackgroundThemeBrush}">-->

            <Pivot.LeftHeader>
                <CommandBar ClosedDisplayMode="Compact">
                    <AppBarButton Icon="Back"    Label="Previous" Click="BackButton_Click"/>
                    <AppBarButton Icon="Forward" Label="Next"     Click="NextButton_Click"/>
                </CommandBar>
            </Pivot.LeftHeader>

            <Pivot.HeaderTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Style="{ThemeResource BodyTextBlockStyle}" Text="{Binding Converter={StaticResource DisplaySymbolText}}" FontFamily="{Binding Converter={StaticResource FontSelector}}" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>
                        <TextBlock Grid.Row="1" Style="{ThemeResource BodyTextBlockStyle}" Text="{Binding Converter={StaticResource DisplayMenuText}}" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>
                    </Grid>
                </DataTemplate>
            </Pivot.HeaderTemplate>

            <!-- Need to set an empty ItemTemplate to prevent default TextBlock from appearing in upper left corner.-->
            <Pivot.ItemTemplate>
                <DataTemplate>
                </DataTemplate>
            </Pivot.ItemTemplate>

        </Pivot>

        <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" ZoomMode="Enabled" MaxZoomFactor="2" MinZoomFactor="0.5">
            <!-- Could not get Page to show in Frame via PivotItem binding, so ended up breaking out of Pivot and changing pages via code behind.
            All works well but can not swipe pages from touch device like pivots typically do.  But can swipe pivot menu! -->
            <Frame x:Name="pageFrame" />
        </ScrollViewer>


    </Grid>

    <!-- Sample code for AppBar at bottom of Page if desired.
    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton x:Uid="AddAppBarButton" x:Name="AddAppBarButton" Label="add" Icon="Add" Click="AddAppBarButton_Click" />
            <CommandBar.SecondaryCommands>
                <AppBarButton x:Uid="SecondaryButton1" x:Name="SecondaryButton1" Label="secondary command 1" />
                <AppBarButton x:Uid="SecondaryButton2" x:Name="SecondaryButton2" Label="secondary command 2" />
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>-->

</Page>
